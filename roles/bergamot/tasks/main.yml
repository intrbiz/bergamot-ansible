---
# Deploy Bergamot Monitoring

#
# Ansible PreReqs
#

- name: Install Python XML
  zypper: name={{ item }} state=present
  tags: bergamot
  with_items:
   - python-xml

#
# Deploy RabbitMQ
#

- name: Install RabbitMQ
  zypper: name={{ item }} state=present
  tags: bergamot
  with_items:
   - rabbitmq-server
   - rabbitmq-server-plugins

- name: Enable RabbitMQ Management
  command: rabbitmq-plugins enable rabbitmq_management
  
- name: Enable RabbitMQ Server
  service: name=rabbitmq-server state=started enabled=yes

- name: Check RabbitMQ Admin User
  command: rabbitmqctl list_users
  register: rabbitmq_admin_user

- name: Create RabbitMQ Admin User
  command: rabbitmqctl add_user admin abc123
  when: rabbitmq_admin_user.stdout.find('admin') == -1
  
- name: Setup RabbitMQ Admin User Tags
  command: rabbitmqctl set_user_tags admin administrator
  when: rabbitmq_admin_user.stdout.find('admin') == -1
  
- name: Setup RabbitMQ Admin User Permissions
  command: rabbitmqctl set_permissions -p / admin '.*' '.*' '.*'
  when: rabbitmq_admin_user.stdout.find('admin') == -1

- name: Create RabbitMQ Bergamot User
  command: rabbitmqctl add_user bergamot bergamot
  when: rabbitmq_admin_user.stdout.find('bergamot') == -1

- name: Create RabbitMQ Bergamot User
  command: rabbitmqctl set_permissions -p / bergamot '.*' '.*' '.*'
  when: rabbitmq_admin_user.stdout.find('bergamot') == -1

- name: Remove RabbitMQ Guest User
  command: rabbitmqctl delete_user guest
  when: rabbitmq_admin_user.stdout.find('guest') != -1

#
# Deploy PostgreSQL
#

- name: Install PostgreSQL Repository
  zypper_repository: repo='http://download.opensuse.org/repositories/server:/database:/postgresql/openSUSE_13.1/server:database:postgresql.repo' state=present
  tags: bergamot

- name: Install PostgreSQL Repository Keys
  command: zypper --gpg-auto-import-keys -q ref
  tags: bergamot

- name: Install PostgreSQL
  zypper: name={{ item }} state=present
  tags: bergamot
  with_items:
   - postgresql93
   - postgresql93-server
   - postgresql93-contrib
  
- name: Install Python PostgreSQL
  zypper: name={{ item }} state=present
  tags: bergamot
  with_items:
   - python-psycopg2

- name: Enable PostgreSQL Server
  service: name=postgresql state=started enabled=yes
  tags: bergamot

- name: Configure PostgreSQL HBA
  template: src=postgresql/pg_hba.conf.j2 dest=/var/lib/pgsql/data/pg_hba.conf
  tags: bergamot
  notify: restart postgresql

- name: Configure PostgreSQL
  template: src=postgresql/postgresql.conf.j2 dest=/var/lib/pgsql/data/postgresql.conf
  tags: bergamot
  notify: restart postgresql

- name: Restart PostgreSQL Server
  service: name=postgresql state=restarted
  tags: bergamot

- name: Create PostgreSQL Bergamot User
  postgresql_user: name=bergamot state=present
  tags: bergamot

- name: Create PostgreSQL Bergamot Database
  postgresql_db: name=bergamot owner=bergamot encoding=UTF8 state=present
  tags: bergamot

#
# Deploy Bergamot Monitoring
#

- name: Install Bergamot Repository
  zypper_repository: repo='http://obs.intrbiz.net:82/Bergamot/openSUSE_13.1/Bergamot.repo' state=present
  tags: bergamot

- name: Install Bergamot Repository Keys
  command: zypper --gpg-auto-import-keys -q ref
  tags: bergamot

- name: Install Bergamot
  zypper: name={{ item }} state=present
  tags: bergamot
  with_items:
   - nagios-plugins-all
   - bergamot-java
   - bergamot-cli
   - bergamot-ui
   - bergamot-agent-manager
   - bergamot-notifier-email
   - bergamot-notifier-sms
   - bergamot-notifier-webhook
   - bergamot-worker-nagios
   - bergamot-worker-snmp
   - bergamot-worker-http
   - bergamot-worker-agent
   - bergamot-worker-dummy

#
# Deploy Bergamot configuration files
#

#
# Use the admin CLI to create us a site
#

- name: Create Default Site
  command: bergamot-cli admin create-site 'bergamot.local' 'Local Bergamot Instance' 'bergamot'
  args:
    creates: /etc/bergamot/config/bergamot.local

#
# Configure Nginx for the UI
#

- name: Configure Bergamot VHost
  template: src=bergamot.conf.j2 dest=/etc/nginx/vhosts.d/bergamot.conf
  tags: bergamot
  notify: restart nginx

#- name: Deploy Bergamot TLS Key
#  copy: src=ssl.key/demo.bergamot-monitoring.org.key dest=/etc/nginx/ssl.key/demo.bergamot-monitoring.org.key owner=root group=root mode=0400
#  tags: bergamot
#  notify: restart nginx
#
#- name: Deploy Bergamot TLS DH Params
#  copy: src=ssl.key/bergamot_dh2048params.pem dest=/etc/nginx/ssl.key/bergamot_dh2048params.pem owner=root group=root mode=0400
#  tags: bergamot
#  notify: restart nginx
#
#- name: Deploy Bergamot TLS Certificate
#  copy: src=ssl.crt/demo.bergamot-monitoring.org_bundle.crt dest=/etc/nginx/ssl.crt/demo.bergamot-monitoring.org_bundle.crt owner=root group=root mode=0400
#  tags: bergamot
#  notify: restart nginx

#
# Start Bergamot
#

- name: Enable Bergamot Agent Manager Server
  service: name=bergamot-agent-manager state=started enabled=yes
  tags: bergamot

- name: Enable Bergamot Email Notifier Server
  service: name=bergamot-notifier-email state=started enabled=yes
  tags: bergamot

- name: Enable Bergamot SMS Notifier Server
  service: name=bergamot-notifier-sms state=started enabled=yes
  tags: bergamot

- name: Enable Bergamot Nagios Worker Server
  service: name=bergamot-worker-nagios state=started enabled=yes
  tags: bergamot

- name: Enable Bergamot SNMP Worker Server
  service: name=bergamot-worker-snmp state=started enabled=yes
  tags: bergamot

- name: Enable Bergamot HTTP Worker Server
  service: name=bergamot-worker-http state=started enabled=yes
  tags: bergamot

- name: Enable Bergamot Agent Worker Server
  service: name=bergamot-worker-agent state=started enabled=yes
  tags: bergamot

- name: Enable Bergamot Dummy Worker Server
  service: name=bergamot-worker-dummy state=started enabled=yes
  tags: bergamot

- name: Enable Bergamot Agent Manager Server
  service: name=bergamot-agent-server state=started enabled=yes
  tags: bergamot

- name: Enable Bergamot UI Server
  service: name=bergamot-ui state=started enabled=yes
  tags: bergamot

- name: Enable Nginx
  service: name=nginx state=started enabled=yes
  tags: bergamot

